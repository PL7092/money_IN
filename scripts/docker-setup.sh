#!/bin/bash

# FinanceFlow Docker Setup Script for MariaDB
# Este script automatiza a configura√ß√£o inicial do Docker com MariaDB

set -e

echo "üöÄ FinanceFlow - Configura√ß√£o Docker (MariaDB)"
echo "=============================================="

# Verificar se Docker est√° instalado
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker n√£o encontrado. Por favor, instale o Docker primeiro."
    echo "   Visite: https://docs.docker.com/get-docker/"
    exit 1
fi

# Verificar se Docker Compose est√° instalado
if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose n√£o encontrado. Por favor, instale o Docker Compose."
    echo "   Visite: https://docs.docker.com/compose/install/"
    exit 1
fi

# Verificar se Docker est√° a correr
if ! docker info &> /dev/null; then
    echo "‚ùå Docker n√£o est√° a correr. Por favor, inicie o Docker."
    exit 1
fi

echo "‚úÖ Docker e Docker Compose encontrados"

# Criar diret√≥rios necess√°rios
echo "üìÅ Criando diret√≥rios necess√°rios..."
mkdir -p backups
mkdir -p uploads
mkdir -p logs
mkdir -p database/mariadb-init

# Configurar permiss√µes
chmod 755 backups uploads logs database

# Copiar ficheiro de ambiente se n√£o existir
if [ ! -f .env ]; then
    echo "üìù Criando ficheiro .env..."
    cp .env.example .env
    echo "‚ö†Ô∏è  Por favor, edite o ficheiro .env com as suas configura√ß√µes"
else
    echo "‚úÖ Ficheiro .env j√° existe"
fi

# Verificar portas dispon√≠veis
echo "üîç Verificando portas dispon√≠veis..."

check_port() {
    local port=$1
    local service=$2
    if lsof -Pi :$port -sTCP:LISTEN -t >/dev/null 2>&1; then
        echo "‚ö†Ô∏è  Porta $port ($service) j√° est√° em uso"
        return 1
    else
        echo "‚úÖ Porta $port ($service) dispon√≠vel"
        return 0
    fi
}

check_port 3000 "FinanceFlow App"
check_port 3306 "MariaDB"

# Construir e iniciar servi√ßos
echo ""
echo "üèóÔ∏è  Construindo e iniciando servi√ßos MariaDB..."
echo "   Isto pode demorar alguns minutos na primeira vez..."

# Construir imagens
docker-compose build

# Iniciar servi√ßos em background
docker-compose up -d

# Aguardar que os servi√ßos estejam prontos
echo ""
echo "‚è≥ Aguardando que os servi√ßos estejam prontos..."

# Fun√ß√£o para verificar se um servi√ßo est√° pronto
wait_for_service() {
    local service=$1
    local max_attempts=30
    local attempt=1
    
    while [ $attempt -le $max_attempts ]; do
        if docker-compose ps $service | grep -q "healthy\|Up"; then
            echo "‚úÖ $service est√° pronto"
            return 0
        fi
        
        echo "   Tentativa $attempt/$max_attempts - Aguardando $service..."
        sleep 2
        attempt=$((attempt + 1))
    done
    
    echo "‚ùå $service n√£o ficou pronto a tempo"
    return 1
}

# Aguardar pelos servi√ßos
wait_for_service mariadb
wait_for_service financeflow

# Verificar estado final
echo ""
echo "üìä Estado dos servi√ßos:"
docker-compose ps

# Mostrar informa√ß√µes de acesso
echo ""
echo "üéâ Configura√ß√£o conclu√≠da com sucesso!"
echo ""
echo "üì± Acesso √† Aplica√ß√£o:"
echo "   URL: http://localhost:3000"
echo "   Email: demo@financeflow.local"
echo "   Password: demo123"
echo ""
echo "üóÑÔ∏è  Acesso √† Base de Dados MariaDB:"
echo "   Host: localhost"
echo "   Porta: 3306"
echo "   Base de Dados: financeflow"
echo "   Utilizador: financeflow_user"
echo "   Password: financeflow_password"
echo ""
echo "üìù Comandos √öteis:"
echo "   Ver logs: docker-compose logs -f"
echo "   Parar: docker-compose down"
echo "   Reiniciar: docker-compose restart"
echo "   Backup: docker-compose run --rm backup"
echo ""
echo "üê≥ Para Unraid:"
echo "   1. Instale o plugin 'Compose Manager'"
echo "   2. Crie nova stack com nome 'FinanceFlow'"
echo "   3. Cole o conte√∫do do docker-compose.yml"
echo "   4. Configure vari√°veis de ambiente"
echo "   5. Inicie a stack"
echo ""
echo "‚ö†Ô∏è  Importante:"
echo "   - Edite o ficheiro .env para configura√ß√µes de produ√ß√£o"
echo "   - Configure backups regulares"
echo "   - Altere passwords padr√£o para produ√ß√£o"
echo "   - No Unraid, use caminhos /mnt/user/appdata/financeflow"
echo ""